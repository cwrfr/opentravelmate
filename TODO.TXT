Tasks
-----

-Document place-holders:
<div
	id="main-view"
	data-otm-widget="WebView"
	data-otm-url="extension/org/opentravelmate/mainview/mainview.html"
	data-otm-entrypoint="extension/org/opentravelmate/mainview/mainview"/>

-Add params to nativeMap.buildView in order to set the default latitude/longitude/zoom.

-Update the UML diagrams for the widgets (add Widget.removeById())

-Document the AutoCompleteTextInput widget

-Create 2 generic panels:
 - menu panel: displayed under the menu (shown on demand for small screens, always displayed for big screens)
 - details panel: displayed like a new activity on mobile, displayed on the left on big screens

- Find a better name for FunctionDam

- On Android, typing text in an Auto-complete input make the auto-complete dialog to "blink". It is because
  AutoCompleteTextInput._setDialogLayoutParams() is called each time a key is typed.
  --> Call this method ONLY if the layout change.

- Rename SvgMarkerIcon to SvgPathMarkerIcon.

- Add a Map.removeMarker() method to the UML diagram.

- Implement nativeMap.panTo & addMarker & removeMarker on the Android and Web platforms.

- Add Marker.id to the UML diagram

- Check if it is not better to put the functions Marker.onClick, onMouseEnter and onMouseLeave on the Map widget.

- Use a SparseArray in the Android's NativeMap.

- In the UML diagram, rename TileOverlayOptions to TileOverlay

- Replace TileOverlay.tileProvider: Function by TileOverlay.tileUrlPattern: String to the UML diagram.

- Add TileOverlay.id to the UML diagram

- Add Map.onTileDisplayed(listener: function(zoom,x,y)) and Map.onTileReleased(listener: function(zoom,x,y)) to the UML diagram and implement it

- Add TileOverlay.removeTileOverlay to the UML diagram and implement it

Develoment tasks
----------------

1.  [X] Refactor the place-finder
2.  [X] Refactor the autocompletion dialog
2b. [X] Split core/commons into core/utils and core/style
3.  [X] Create an autocompletion input widget and use it in the place-finder
4.  [X] Display found places on the map
5.  [ ] Display the Luxembourg bus lines on the map
6.  [ ] Handle bus stop or found place selection on the map
7.  [ ] Create the "show/hide satellite" map button
8.  [ ] Create the "show current location" map button
9.  [ ] Correctly handle the main menu (show the items until there is no place left and put other items in the "more" panel)
10. [ ] On big screens, show the menu item title
11. [ ] Create the generic "menu panel" and add an arrow under the selected menu item. The place finder must be refactored to use this panel.

Next tasks: itinerary panel, find itinerary menu item, place details, ...
